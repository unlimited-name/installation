diff --git a/environments/g4py/source/materials/CMakeLists.txt b/environments/g4py/source/materials/CMakeLists.txt
index 9b1ed904..a85901a9 100644
--- a/environments/g4py/source/materials/CMakeLists.txt
+++ b/environments/g4py/source/materials/CMakeLists.txt
@@ -10,6 +10,7 @@ add_library(
   pyG4ElementVector.cc
   pyG4Isotope.cc
   pyG4Material.cc
+  pyG4MaterialPropertiesTable.cc
   pyG4MaterialTable.cc
   pyG4NistManager.cc
   pymodG4materials.cc
diff --git a/environments/g4py/source/materials/pyG4MaterialPropertiesTable.cc b/environments/g4py/source/materials/pyG4MaterialPropertiesTable.cc
new file mode 100644
index 00000000..75b3f328
--- /dev/null
+++ b/environments/g4py/source/materials/pyG4MaterialPropertiesTable.cc
@@ -0,0 +1,80 @@
+//
+// ********************************************************************
+// * License and Disclaimer                                           *
+// *                                                                  *
+// * The  Geant4 software  is  copyright of the Copyright Holders  of *
+// * the Geant4 Collaboration.  It is provided  under  the terms  and *
+// * conditions of the Geant4 Software License,  included in the file *
+// * LICENSE and available at  http://cern.ch/geant4/license .  These *
+// * include a list of copyright holders.                             *
+// *                                                                  *
+// * Neither the authors of this software system, nor their employing *
+// * institutes,nor the agencies providing financial support for this *
+// * work  make  any representation or  warranty, express or implied, *
+// * regarding  this  software system or assume any liability for its *
+// * use.  Please see the license in the file  LICENSE  and URL above *
+// * for the full disclaimer and the limitation of liability.         *
+// *                                                                  *
+// * This  code  implementation is the result of  the  scientific and *
+// * technical work of the GEANT4 collaboration.                      *
+// * By using,  copying,  modifying or  distributing the software (or *
+// * any work based  on the software)  you  agree  to acknowledge its *
+// * use  in  resulting  scientific  publications,  and indicate your *
+// * acceptance of all terms of the Geant4 Software license.          *
+// ********************************************************************
+//
+// $Id: pyG4MaterialPropertiesTable.cc,v 1.7 2008-12-04 08:55:25 kmura Exp $
+// $Name: geant4-09-04-patch-02 $
+// ====================================================================
+//   pyG4Material.cc
+//
+//                                         2005 Q
+// ====================================================================
+#include <boost/python.hpp>
+#include "G4Version.hh"
+#include "G4MaterialPropertiesTable.hh"
+#include <vector>
+
+using namespace boost::python;
+
+// ====================================================================
+// thin wrappers
+// ====================================================================
+namespace pyG4MaterialPropertiesTable {
+
+  // AddElement
+  void f1_AddProperty(G4MaterialPropertiesTable *table, const char *key, list photon_energies, list property_values)
+  {
+    std::vector<double> v_energies(len(photon_energies));
+    std::vector<double> v_values(len(property_values));
+    
+    for (unsigned int i=0; i < v_energies.size(); i++)
+      v_energies[i] = extract<double>(photon_energies[i]);
+    for (unsigned int i=0; i < v_values.size(); i++)
+      v_values[i] = extract<double>(property_values[i]);
+    
+    table->AddProperty(key, &v_energies.front(), &v_values.front(), v_energies.size());
+  }
+}
+
+using namespace pyG4MaterialPropertiesTable;
+
+// ====================================================================
+// module definition
+// ====================================================================
+void export_G4MaterialPropertiesTable()
+{
+  class_<G4MaterialPropertiesTable, G4MaterialPropertiesTable*, boost::noncopyable>
+    ("G4MaterialPropertiesTable", "material properties table class")
+    .def("AddConstProperty",    &G4MaterialPropertiesTable::AddConstProperty)
+    .def("AddProperty",    f1_AddProperty)
+    .def("RemoveConstProperty", &G4MaterialPropertiesTable::RemoveConstProperty)
+    .def("RemoveProperty", &G4MaterialPropertiesTable::RemoveProperty)
+    //.def("GetConstProperty", &G4MaterialPropertiesTable::GetConstProperty)
+    .def("ConstPropertyExists", &G4MaterialPropertiesTable::ConstPropertyExists)
+    //.def("GetProperty", &G4MaterialPropertiesTable::GetProperty, return_value_policy<reference_existing_object>())
+    .def("AddEntry", &G4MaterialPropertiesTable::AddEntry)
+    .def("DumpTable", &G4MaterialPropertiesTable::DumpTable)
+    ;
+}
+
diff --git a/environments/g4py/source/materials/pymodG4materials.cc b/environments/g4py/source/materials/pymodG4materials.cc
index 391378a9..a8453120 100644
--- a/environments/g4py/source/materials/pymodG4materials.cc
+++ b/environments/g4py/source/materials/pymodG4materials.cc
@@ -37,6 +37,7 @@ using namespace boost::python;
 // ====================================================================
 void export_G4Material();
 void export_G4MaterialTable();
+void export_G4MaterialPropertiesTable();
 void export_G4Element();
 void export_G4ElementTable();
 //void export_G4ElementVector();
@@ -48,6 +49,7 @@ BOOST_PYTHON_MODULE(G4materials)
 {
   export_G4Material();
   export_G4MaterialTable();
+  export_G4MaterialPropertiesTable();
   export_G4Element();
   export_G4ElementTable();
   //export_G4ElementVector();
diff --git a/environments/g4py/source/python3/__init__.py b/environments/g4py/source/python3/__init__.py
index c40a3cc0..5192f6cc 100644
--- a/environments/g4py/source/python3/__init__.py
+++ b/environments/g4py/source/python3/__init__.py
@@ -86,7 +86,7 @@ gParticleIterator = PyG4ParticleList()
 gProcessTable = G4ProcessTable.GetProcessTable()
 
 # gLossTableManager
-gLossTableManager = G4LossTableManager.Instance()
+#gLossTableManager = G4LossTableManager.Instance()
 
 # gProductionCutsTable
 gProductionCutsTable = G4ProductionCutsTable.GetProductionCutsTable()
